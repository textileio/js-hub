name: Test
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  threads:
    name: Test Threads
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, 'skip-ci')"

    services:
      threads1:
        image: textile/go-threads:latest
        env:
          THRDS_HOSTADDR: /ip4/0.0.0.0/tcp/4006
          THRDS_APIADDR: /ip4/0.0.0.0/tcp/6006
          THRDS_APIPROXYADDR: /ip4/0.0.0.0/tcp/6007
          THRDS_DEBUG: true
        ports:
          - '4006:4006'
          - '127.0.0.1:6006:6006'
          - '127.0.0.1:6007:6007'
      threads2:
        image: textile/go-threads:latest
        env:
          THRDS_HOSTADDR: /ip4/0.0.0.0/tcp/4006
          THRDS_APIADDR: /ip4/0.0.0.0/tcp/6006
          THRDS_APIPROXYADDR: /ip4/0.0.0.0/tcp/6007
          THRDS_DEBUG: true
        ports:
          - '4206:4006'
          - '127.0.0.1:6206:6006'
          - '127.0.0.1:6207:6007'

    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Cache
        uses: actions/cache@v1
        with:
          path: ~/.npm # npm cache files are stored in `~/.npm` on Linux/macOS
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Setup
        uses: actions/setup-node@v1
        with:
          node-version: 12

      - name: Install
        run: npm install

      - name: Bootstrap
        run: npm run bootstrap -- --hoist

      - name: Build
        run: npm run build

      - name: Test Node
        run: npm run test:threads:node

      - name: Test Browser
        run: npm run test:threads:browser

      - name: Dump docker logs on failure
        if: failure()
        uses: jwalton/gh-docker-logs@v1

  hub:
    name: Test Hub
    runs-on: ubuntu-latest
    needs: threads

    services:
      ipfs:
        image: ipfs/go-ipfs:v0.7.0
        ports:
          - '4001:4001'
          - '127.0.0.1:5001:5001'
          - '8080:8080'
      mongo:
        image: mongo:latest
        ports:
          - '127.0.0.1:27017:27017'
      billing:
        image: textile/textile:billing
        env:
          BILLING_ADDR_API: /ip4/0.0.0.0/tcp/10006
          BILLING_ADDR_MONGO_URI: mongodb://mongo:27017
          BILLING_ADDR_GATEWAY_HOST: /ip4/0.0.0.0/tcp/8010
          BILLING_STRIPE_API_KEY: ${{ secrets.STRIPE_API_KEY }}
        ports:
          - '127.0.0.1:10006:10006'
          - '127.0.0.1:8010:8010'
      textile:
        image: textile/textile:latest
        env:
          HUB_ADDR_API: /ip4/0.0.0.0/tcp/3006
          HUB_ADDR_API_PROXY: /ip4/0.0.0.0/tcp/3007
          HUB_ADDR_THREADS_HOST: /ip4/0.0.0.0/tcp/4006
          HUB_ADDR_GATEWAY_HOST: /ip4/0.0.0.0/tcp/8006
          HUB_ADDR_MONGO_URI: mongodb://mongo:27017
          HUB_ADDR_IPFS_API: /dns4/ipfs/tcp/5001
          HUB_ADDR_BILLING_API: billing:10006
          HUB_EMAIL_SESSION_SECRET: hubsession
          HUB_LOG_DEBUG: true
        ports:
          - '127.0.0.1:3006:3006'
          - '3007:3007'
          - '4006:4006'
          - '127.0.0.1:8006:8006'

    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Cache
        uses: actions/cache@v1
        with:
          path: ~/.npm # npm cache files are stored in `~/.npm` on Linux/macOS
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Setup
        uses: actions/setup-node@v1
        with:
          node-version: 12

      - name: Install
        run: npm install

      - name: Bootstrap
        run: npm run bootstrap -- --hoist

      - name: Build
        run: npm run build

      - name: Test Node
        run: npm run test:hub:node

      - name: Test Browser
        run: npm run test:hub:browser

      - name: Test Examples
        run: |
          npm run docs
          npm run test:docs

      - name: Dump docker logs on failure
        if: failure()
        uses: jwalton/gh-docker-logs@v1

{
  "_comment": "This file is auto-generated by write-translations.js",
  "localized-strings": {
    "next": "Next",
    "previous": "Previous",
    "tagline": "A client for communicating with Textile Hub.",
    "docs": {
      "hub.action": {
        "title": "Action enum"
      },
      "hub.apisig": {
        "title": "APISig type"
      },
      "hub.buckets.archive": {
        "title": "Buckets.archive() method"
      },
      "hub.buckets.archiveinfo": {
        "title": "Buckets.archiveInfo() method"
      },
      "hub.buckets.archivestatus": {
        "title": "Buckets.archiveStatus() method"
      },
      "hub.buckets.archivewatch": {
        "title": "Buckets.archiveWatch() method"
      },
      "hub.buckets.copyauth": {
        "title": "Buckets.copyAuth() method"
      },
      "hub.buckets.getorcreate": {
        "title": "Buckets.getOrCreate() method"
      },
      "hub.buckets.gettoken": {
        "title": "Buckets.getToken() method"
      },
      "hub.buckets.gettokenchallenge": {
        "title": "Buckets.getTokenChallenge() method"
      },
      "hub.buckets.create": {
        "title": "Buckets.create() method"
      },
      "hub.buckets.links": {
        "title": "Buckets.links() method"
      },
      "hub.buckets.list": {
        "title": "Buckets.list() method"
      },
      "hub.buckets.listipfspath": {
        "title": "Buckets.listIpfsPath() method"
      },
      "hub.buckets.listpath": {
        "title": "Buckets.listPath() method"
      },
      "hub.buckets.listpathflat": {
        "title": "Buckets.listPathFlat() method"
      },
      "hub.buckets": {
        "title": "Buckets class"
      },
      "hub.buckets.open": {
        "title": "Buckets.open() method"
      },
      "hub.buckets.pullipfspath": {
        "title": "Buckets.pullIpfsPath() method"
      },
      "hub.buckets.pullpath": {
        "title": "Buckets.pullPath() method"
      },
      "hub.buckets.pushpath": {
        "title": "Buckets.pushPath() method"
      },
      "hub.buckets.remove": {
        "title": "Buckets.remove() method"
      },
      "hub.buckets.removepath": {
        "title": "Buckets.removePath() method"
      },
      "hub.buckets.root": {
        "title": "Buckets.root() method"
      },
      "hub.buckets.withkeyinfo": {
        "title": "Buckets.withKeyInfo() method"
      },
      "hub.buckets.withthread": {
        "title": "Buckets.withThread() method"
      },
      "hub.buckets.withuserauth": {
        "title": "Buckets.withUserAuth() method"
      },
      "hub.bucketsinit": {
        "title": "bucketsInit() function"
      },
      "hub.bytestoarray": {
        "title": "bytesToArray() function"
      },
      "hub.client._constructor_": {
        "title": "Client.(constructor)"
      },
      "hub.client.context": {
        "title": "Client.context property"
      },
      "hub.client.create": {
        "title": "Client.create() method"
      },
      "hub.client.delete": {
        "title": "Client.delete() method"
      },
      "hub.client.deletecollection": {
        "title": "Client.deleteCollection() method"
      },
      "hub.client.deletedb": {
        "title": "Client.deleteDB() method"
      },
      "hub.client.find": {
        "title": "Client.find() method"
      },
      "hub.client.findbyid": {
        "title": "Client.findByID() method"
      },
      "hub.client.getcollectionindexes": {
        "title": "Client.getCollectionIndexes() method"
      },
      "hub.client.getdbinfo": {
        "title": "Client.getDBInfo() method"
      },
      "hub.client.gettoken": {
        "title": "Client.getToken() method"
      },
      "hub.client.gettokenchallenge": {
        "title": "Client.getTokenChallenge() method"
      },
      "hub.client.has": {
        "title": "Client.has() method"
      },
      "hub.client.joinfrominfo": {
        "title": "Client.joinFromInfo() method"
      },
      "hub.client.listdbs": {
        "title": "Client.listDBs() method"
      },
      "hub.client.listen": {
        "title": "Client.listen() method"
      },
      "hub.client": {
        "title": "Client class"
      },
      "hub.client.newcollection": {
        "title": "Client.newCollection() method"
      },
      "hub.client.newcollectionfromobject": {
        "title": "Client.newCollectionFromObject() method"
      },
      "hub.client.newdb": {
        "title": "Client.newDB() method"
      },
      "hub.client.newdbfromaddr": {
        "title": "Client.newDBFromAddr() method"
      },
      "hub.client.open": {
        "title": "Client.open() method"
      },
      "hub.client.randomidentity": {
        "title": "Client.randomIdentity() method"
      },
      "hub.client.readtransaction": {
        "title": "Client.readTransaction() method"
      },
      "hub.client.rpcoptions": {
        "title": "Client.rpcOptions property"
      },
      "hub.client.save": {
        "title": "Client.save() method"
      },
      "hub.client.servicehost": {
        "title": "Client.serviceHost property"
      },
      "hub.client.updatecollection": {
        "title": "Client.updateCollection() method"
      },
      "hub.client.withkeyinfo": {
        "title": "Client.withKeyInfo() method"
      },
      "hub.client.withuserauth": {
        "title": "Client.withUserAuth() method"
      },
      "hub.client.writetransaction": {
        "title": "Client.writeTransaction() method"
      },
      "hub.createapisig": {
        "title": "createAPISig() function"
      },
      "hub.createuserauth": {
        "title": "createUserAuth() function"
      },
      "hub.dbinfo.addrs": {
        "title": "DBInfo.addrs property"
      },
      "hub.dbinfo.key": {
        "title": "DBInfo.key property"
      },
      "hub.dbinfo": {
        "title": "DBInfo interface"
      },
      "hub.decrypt": {
        "title": "decrypt() function"
      },
      "hub.encrypt": {
        "title": "encrypt() function"
      },
      "hub.expirationerror": {
        "title": "expirationError variable"
      },
      "hub.extractpublickeybytes": {
        "title": "extractPublicKeyBytes() function"
      },
      "hub.filter.actiontypes": {
        "title": "Filter.actionTypes property"
      },
      "hub.filter.collectionname": {
        "title": "Filter.collectionName property"
      },
      "hub.filter.instanceid": {
        "title": "Filter.instanceID property"
      },
      "hub.filter": {
        "title": "Filter interface"
      },
      "hub.getthreadreplyobj.id": {
        "title": "GetThreadResponseObj.id property"
      },
      "hub.getthreadreplyobj.isdb": {
        "title": "GetThreadResponseObj.isDB property"
      },
      "hub.getthreadreplyobj": {
        "title": "GetThreadResponseObj interface"
      },
      "hub.getthreadreplyobj.name": {
        "title": "GetThreadResponseObj.name property"
      },
      "hub.identity": {
        "title": "Identity interface"
      },
      "hub.identity.public": {
        "title": "Identity.public property"
      },
      "hub.identity.sign": {
        "title": "Identity.sign() method"
      },
      "hub.inboxlistoptions.ascending": {
        "title": "InboxListOptions.ascending property"
      },
      "hub.inboxlistoptions.limit": {
        "title": "InboxListOptions.limit property"
      },
      "hub.inboxlistoptions": {
        "title": "InboxListOptions interface"
      },
      "hub.inboxlistoptions.seek": {
        "title": "InboxListOptions.seek property"
      },
      "hub.inboxlistoptions.status": {
        "title": "InboxListOptions.status property"
      },
      "hub.createobject": {
        "title": "CreateObject type"
      },
      "hub.instance.instance": {
        "title": "Instance.instance property"
      },
      "hub.instance": {
        "title": "Instance interface"
      },
      "hub.keyinfo": {
        "title": "KeyInfo type"
      },
      "hub.linksobject": {
        "title": "LinksObject type"
      },
      "hub.listpathflat": {
        "title": "listPathFlat() function"
      },
      "hub.listpathitemobject": {
        "title": "ListPathItemObject type"
      },
      "hub.listpathobject": {
        "title": "ListPathObject type"
      },
      "hub.listpathrecursive": {
        "title": "listPathRecursive() function"
      },
      "hub.mailboxevent": {
        "title": "MailboxEvent interface"
      },
      "hub.mailboxevent.message": {
        "title": "MailboxEvent.message property"
      },
      "hub.mailboxevent.messageid": {
        "title": "MailboxEvent.messageID property"
      },
      "hub.mailboxevent.type": {
        "title": "MailboxEvent.type property"
      },
      "hub.mailboxeventtype": {
        "title": "MailboxEventType enum"
      },
      "hub.mailconfig": {
        "title": "MailConfig variable"
      },
      "hub": {
        "title": "Package Overview"
      },
      "hub.private": {
        "title": "Private type"
      },
      "hub.privatekey._constructor_": {
        "title": "PrivateKey.(constructor)"
      },
      "hub.privatekey.bytes": {
        "title": "PrivateKey.bytes property"
      },
      "hub.privatekey.cansign": {
        "title": "PrivateKey.canSign() method"
      },
      "hub.privatekey.decrypt": {
        "title": "PrivateKey.decrypt() method"
      },
      "hub.privatekey.fromrandom": {
        "title": "PrivateKey.fromRandom() method"
      },
      "hub.privatekey.fromrawed25519seed": {
        "title": "PrivateKey.fromRawEd25519Seed() method"
      },
      "hub.privatekey.fromstring": {
        "title": "PrivateKey.fromString() method"
      },
      "hub.privatekey": {
        "title": "PrivateKey class"
      },
      "hub.privatekey.privkey": {
        "title": "PrivateKey.privKey property"
      },
      "hub.privatekey.pubkey": {
        "title": "PrivateKey.pubKey property"
      },
      "hub.privatekey.public": {
        "title": "PrivateKey.public property"
      },
      "hub.privatekey.seed": {
        "title": "PrivateKey.seed property"
      },
      "hub.privatekey.sign": {
        "title": "PrivateKey.sign() method"
      },
      "hub.privatekey.tostring": {
        "title": "PrivateKey.toString() method"
      },
      "hub.privatekey.type": {
        "title": "PrivateKey.type property"
      },
      "hub.privatekeyfromstring": {
        "title": "privateKeyFromString() function"
      },
      "hub.public.bytes": {
        "title": "Public.bytes property"
      },
      "hub.public": {
        "title": "Public interface"
      },
      "hub.public.verify": {
        "title": "Public.verify() method"
      },
      "hub.publickey._constructor_": {
        "title": "PublicKey.(constructor)"
      },
      "hub.publickey.bytes": {
        "title": "PublicKey.bytes property"
      },
      "hub.publickey.encrypt": {
        "title": "PublicKey.encrypt() method"
      },
      "hub.publickey.fromstring": {
        "title": "PublicKey.fromString() method"
      },
      "hub.publickey": {
        "title": "PublicKey class"
      },
      "hub.publickey.pubkey": {
        "title": "PublicKey.pubKey property"
      },
      "hub.publickey.tostring": {
        "title": "PublicKey.toString() method"
      },
      "hub.publickey.type": {
        "title": "PublicKey.type property"
      },
      "hub.publickey.verify": {
        "title": "PublicKey.verify() method"
      },
      "hub.publickeybytesfromstring": {
        "title": "publicKeyBytesFromString() function"
      },
      "hub.publickeybytestostring": {
        "title": "publicKeyBytesToString() function"
      },
      "hub.publickeytostring": {
        "title": "publicKeyToString() function"
      },
      "hub.pushpathresult": {
        "title": "PushPathResult interface"
      },
      "hub.pushpathresult.path": {
        "title": "PushPathResult.path property"
      },
      "hub.pushpathresult.root": {
        "title": "PushPathResult.root property"
      },
      "hub.query._constructor_": {
        "title": "Query.(constructor)"
      },
      "hub.query.and": {
        "title": "Query.and() method"
      },
      "hub.query.ands": {
        "title": "Query.ands property"
      },
      "hub.query": {
        "title": "Query class"
      },
      "hub.query.or": {
        "title": "Query.or() method"
      },
      "hub.query.orderby": {
        "title": "Query.orderBy() method"
      },
      "hub.query.orderbydesc": {
        "title": "Query.orderByDesc() method"
      },
      "hub.query.ors": {
        "title": "Query.ors property"
      },
      "hub.query.sort": {
        "title": "Query.sort property"
      },
      "hub.query.where": {
        "title": "Query.where() method"
      },
      "hub.queryjson.ands": {
        "title": "QueryJSON.ands property"
      },
      "hub.queryjson": {
        "title": "QueryJSON interface"
      },
      "hub.queryjson.ors": {
        "title": "QueryJSON.ors property"
      },
      "hub.queryjson.sort": {
        "title": "QueryJSON.sort property"
      },
      "hub.readtransaction._constructor_": {
        "title": "ReadTransaction.(constructor)"
      },
      "hub.readtransaction.client": {
        "title": "ReadTransaction.client property"
      },
      "hub.readtransaction.context": {
        "title": "ReadTransaction.context property"
      },
      "hub.readtransaction.find": {
        "title": "ReadTransaction.find() method"
      },
      "hub.readtransaction.findbyid": {
        "title": "ReadTransaction.findByID() method"
      },
      "hub.readtransaction.has": {
        "title": "ReadTransaction.has() method"
      },
      "hub.readtransaction": {
        "title": "ReadTransaction class"
      },
      "hub.readtransaction.modelname": {
        "title": "ReadTransaction.modelName property"
      },
      "hub.readtransaction.start": {
        "title": "ReadTransaction.start() method"
      },
      "hub.readtransaction.threadid": {
        "title": "ReadTransaction.threadID property"
      },
      "hub.rootobject": {
        "title": "RootObject type"
      },
      "hub.sentboxlistoptions.ascending": {
        "title": "SentboxListOptions.ascending property"
      },
      "hub.sentboxlistoptions.limit": {
        "title": "SentboxListOptions.limit property"
      },
      "hub.sentboxlistoptions": {
        "title": "SentboxListOptions interface"
      },
      "hub.sentboxlistoptions.seek": {
        "title": "SentboxListOptions.seek property"
      },
      "hub.status": {
        "title": "Status enum"
      },
      "hub.threadid._constructor_": {
        "title": "ThreadID.(constructor)"
      },
      "hub.threadid.buf": {
        "title": "ThreadID.buf property"
      },
      "hub.threadid.equals": {
        "title": "ThreadID.equals() method"
      },
      "hub.threadid.frombytes": {
        "title": "ThreadID.fromBytes() method"
      },
      "hub.threadid.fromrandom": {
        "title": "ThreadID.fromRandom() method"
      },
      "hub.threadid.fromstring": {
        "title": "ThreadID.fromString() method"
      },
      "hub.threadid.getencoding": {
        "title": "ThreadID.getEncoding() method"
      },
      "hub.threadid.isdefined": {
        "title": "ThreadID.isDefined() method"
      },
      "hub.threadid": {
        "title": "ThreadID class"
      },
      "hub.threadid.tobytes": {
        "title": "ThreadID.toBytes() method"
      },
      "hub.threadid.tostring": {
        "title": "ThreadID.toString() method"
      },
      "hub.threadid.v1": {
        "title": "ThreadID.V1 property"
      },
      "hub.threadid.variant": {
        "title": "ThreadID.Variant property"
      },
      "hub.threadid.version": {
        "title": "ThreadID.version() method"
      },
      "hub.update.action": {
        "title": "Update.action property"
      },
      "hub.update.collectionname": {
        "title": "Update.collectionName property"
      },
      "hub.update.instanceid": {
        "title": "Update.instanceID property"
      },
      "hub.update": {
        "title": "Update interface"
      },
      "hub.userauth": {
        "title": "UserAuth type"
      },
      "hub.usermessage.body": {
        "title": "UserMessage.body property"
      },
      "hub.usermessage.createdat": {
        "title": "UserMessage.createdAt property"
      },
      "hub.usermessage.from": {
        "title": "UserMessage.from property"
      },
      "hub.usermessage.id": {
        "title": "UserMessage.id property"
      },
      "hub.usermessage": {
        "title": "UserMessage interface"
      },
      "hub.usermessage.readat": {
        "title": "UserMessage.readAt property"
      },
      "hub.usermessage.signature": {
        "title": "UserMessage.signature property"
      },
      "hub.usermessage.to": {
        "title": "UserMessage.to property"
      },
      "hub.users.copyauth": {
        "title": "Users.copyAuth() method"
      },
      "hub.users.deleteinboxmessage": {
        "title": "Users.deleteInboxMessage() method"
      },
      "hub.users.deletesentboxmessage": {
        "title": "Users.deleteSentboxMessage() method"
      },
      "hub.users.getmailboxid": {
        "title": "Users.getMailboxID() method"
      },
      "hub.users.getthread": {
        "title": "Users.getThread() method"
      },
      "hub.users.gettoken": {
        "title": "Users.getToken() method"
      },
      "hub.users.gettokenchallenge": {
        "title": "Users.getTokenChallenge() method"
      },
      "hub.users.listinboxmessages": {
        "title": "Users.listInboxMessages() method"
      },
      "hub.users.listsentboxmessages": {
        "title": "Users.listSentboxMessages() method"
      },
      "hub.users.listthreads": {
        "title": "Users.listThreads() method"
      },
      "hub.users": {
        "title": "Users class"
      },
      "hub.users.readinboxmessage": {
        "title": "Users.readInboxMessage() method"
      },
      "hub.users.sendmessage": {
        "title": "Users.sendMessage() method"
      },
      "hub.users.setupmailbox": {
        "title": "Users.setupMailbox() method"
      },
      "hub.users.watchinbox": {
        "title": "Users.watchInbox() method"
      },
      "hub.users.watchsentbox": {
        "title": "Users.watchSentbox() method"
      },
      "hub.users.withkeyinfo": {
        "title": "Users.withKeyInfo() method"
      },
      "hub.users.withthread": {
        "title": "Users.withThread() method"
      },
      "hub.users.withuserauth": {
        "title": "Users.withUserAuth() method"
      },
      "hub.variant": {
        "title": "Variant enum"
      },
      "hub.where": {
        "title": "Where variable"
      },
      "hub.writetransaction._constructor_": {
        "title": "WriteTransaction.(constructor)"
      },
      "hub.writetransaction.client": {
        "title": "WriteTransaction.client property"
      },
      "hub.writetransaction.context": {
        "title": "WriteTransaction.context property"
      },
      "hub.writetransaction.create": {
        "title": "WriteTransaction.create() method"
      },
      "hub.writetransaction.delete": {
        "title": "WriteTransaction.delete() method"
      },
      "hub.writetransaction.find": {
        "title": "WriteTransaction.find() method"
      },
      "hub.writetransaction.findbyid": {
        "title": "WriteTransaction.findByID() method"
      },
      "hub.writetransaction.has": {
        "title": "WriteTransaction.has() method"
      },
      "hub.writetransaction": {
        "title": "WriteTransaction class"
      },
      "hub.writetransaction.modelname": {
        "title": "WriteTransaction.modelName property"
      },
      "hub.writetransaction.save": {
        "title": "WriteTransaction.save() method"
      },
      "hub.writetransaction.start": {
        "title": "WriteTransaction.start() method"
      },
      "hub.writetransaction.threadid": {
        "title": "WriteTransaction.threadID property"
      },
      "index": {
        "title": "Introduction"
      }
    },
    "links": {
      "Users": "Users",
      "Buckets": "Buckets",
      "Threads": "Threads",
      "Textile Docs": "Textile Docs"
    },
    "categories": {
      "Getting Started": "Getting Started",
      "Users API": "Users API",
      "Buckets": "Buckets",
      "Threads": "Threads",
      "Common Methods & Classes": "Common Methods & Classes",
      "ThreadID Methods": "ThreadID Methods",
      "Types": "Types",
      "Identity interfaces": "Identity interfaces",
      "Private Key Class": "Private Key Class",
      "Public Key Class": "Public Key Class",
      "Experimental": "Experimental",
      "Client": "Client",
      "Common Types": "Common Types"
    }
  },
  "pages-strings": {
    "Help Translate|recruit community translators for your project": "Help Translate",
    "Edit this Doc|recruitment message asking to edit the doc source": "Edit",
    "Translate this Doc|recruitment message asking to translate the docs": "Translate"
  }
}

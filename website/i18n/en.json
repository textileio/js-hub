{
  "_comment": "This file is auto-generated by write-translations.js",
  "localized-strings": {
    "next": "Next",
    "previous": "Previous",
    "tagline": "A client for communicating with Textile Hub.",
    "docs": {
      "classes/_packages_buckets_src_buckets_.buckets": {
        "title": "classes/_packages_buckets_src_buckets_.buckets"
      },
      "globals": {
        "title": "globals"
      },
      "hub.apisig": {
        "title": "APISig type"
      },
      "hub.buckets._constructor_": {
        "title": "Buckets.(constructor)"
      },
      "hub.buckets.context": {
        "title": "Buckets.context property"
      },
      "hub.buckets.init": {
        "title": "Buckets.init() method"
      },
      "hub.buckets.links": {
        "title": "Buckets.links() method"
      },
      "hub.buckets.list": {
        "title": "Buckets.list() method"
      },
      "hub.buckets.listpath": {
        "title": "Buckets.listPath() method"
      },
      "hub.buckets": {
        "title": "Buckets class"
      },
      "hub.buckets.pullpath": {
        "title": "Buckets.pullPath() method"
      },
      "hub.buckets.pushpath": {
        "title": "Buckets.pushPath() method"
      },
      "hub.buckets.remove": {
        "title": "Buckets.remove() method"
      },
      "hub.buckets.removepath": {
        "title": "Buckets.removePath() method"
      },
      "hub.buckets.rpcoptions": {
        "title": "Buckets.rpcOptions property"
      },
      "hub.buckets.servicehost": {
        "title": "Buckets.serviceHost property"
      },
      "hub.buckets.withkeyinfo": {
        "title": "Buckets.withKeyInfo() method"
      },
      "hub.buckets.withuserauth": {
        "title": "Buckets.withUserAuth() method"
      },
      "hub.client._constructor_": {
        "title": "Client.(constructor)"
      },
      "hub.client.context": {
        "title": "Client.context property"
      },
      "hub.client.create": {
        "title": "Client.create() method"
      },
      "hub.client.delete": {
        "title": "Client.delete() method"
      },
      "hub.client.deletecollection": {
        "title": "Client.deleteCollection() method"
      },
      "hub.client.deletedb": {
        "title": "Client.deleteDB() method"
      },
      "hub.client.find": {
        "title": "Client.find() method"
      },
      "hub.client.findbyid": {
        "title": "Client.findByID() method"
      },
      "hub.client.getcollectionindexes": {
        "title": "Client.getCollectionIndexes() method"
      },
      "hub.client.getdbinfo": {
        "title": "Client.getDBInfo() method"
      },
      "hub.client.gettoken": {
        "title": "Client.getToken() method"
      },
      "hub.client.gettokenchallenge": {
        "title": "Client.getTokenChallenge() method"
      },
      "hub.client.has": {
        "title": "Client.has() method"
      },
      "hub.client.listdbs": {
        "title": "Client.listDBs() method"
      },
      "hub.client.listen": {
        "title": "Client.listen() method"
      },
      "hub.client": {
        "title": "Client class"
      },
      "hub.client.newcollection": {
        "title": "Client.newCollection() method"
      },
      "hub.client.newcollectionfromobject": {
        "title": "Client.newCollectionFromObject() method"
      },
      "hub.client.newdb": {
        "title": "Client.newDB() method"
      },
      "hub.client.newdbfromaddr": {
        "title": "Client.newDBFromAddr() method"
      },
      "hub.client.randomidentity": {
        "title": "Client.randomIdentity() method"
      },
      "hub.client.readtransaction": {
        "title": "Client.readTransaction() method"
      },
      "hub.client.rpcoptions": {
        "title": "Client.rpcOptions property"
      },
      "hub.client.save": {
        "title": "Client.save() method"
      },
      "hub.client.servicehost": {
        "title": "Client.serviceHost property"
      },
      "hub.client.updatecollection": {
        "title": "Client.updateCollection() method"
      },
      "hub.client.withkeyinfo": {
        "title": "Client.withKeyInfo() method"
      },
      "hub.client.withuserauth": {
        "title": "Client.withUserAuth() method"
      },
      "hub.client.writetransaction": {
        "title": "Client.writeTransaction() method"
      },
      "hub.createapisig": {
        "title": "createAPISig() function"
      },
      "hub.createuserauth": {
        "title": "createUserAuth() function"
      },
      "hub.expirationerror": {
        "title": "expirationError variable"
      },
      "hub.keyinfo": {
        "title": "KeyInfo type"
      },
      "hub": {
        "title": "Package Overview"
      },
      "hub.pushpathresult": {
        "title": "PushPathResult interface"
      },
      "hub.pushpathresult.path": {
        "title": "PushPathResult.path property"
      },
      "hub.pushpathresult.root": {
        "title": "PushPathResult.root property"
      },
      "hub.threadid._constructor_": {
        "title": "ThreadID.(constructor)"
      },
      "hub.threadid.buf": {
        "title": "ThreadID.buf property"
      },
      "hub.threadid.equals": {
        "title": "ThreadID.equals() method"
      },
      "hub.threadid.frombytes": {
        "title": "ThreadID.fromBytes() method"
      },
      "hub.threadid.fromrandom": {
        "title": "ThreadID.fromRandom() method"
      },
      "hub.threadid.fromstring": {
        "title": "ThreadID.fromString() method"
      },
      "hub.threadid.getencoding": {
        "title": "ThreadID.getEncoding() method"
      },
      "hub.threadid.isdefined": {
        "title": "ThreadID.isDefined() method"
      },
      "hub.threadid": {
        "title": "ThreadID class"
      },
      "hub.threadid.tobytes": {
        "title": "ThreadID.toBytes() method"
      },
      "hub.threadid.tostring": {
        "title": "ThreadID.toString() method"
      },
      "hub.threadid.v1": {
        "title": "ThreadID.V1 property"
      },
      "hub.threadid.variant": {
        "title": "ThreadID.Variant property"
      },
      "hub.threadid.version": {
        "title": "ThreadID.version() method"
      },
      "hub.userauth": {
        "title": "UserAuth type"
      },
      "hub.variant": {
        "title": "Variant enum"
      },
      "index": {
        "title": "Introduction"
      },
      "interfaces/_packages_buckets_src_buckets_.pushpathresult": {
        "title": "interfaces/_packages_buckets_src_buckets_.pushpathresult"
      },
      "interfaces/_packages_buckets_src_normalize_.file": {
        "title": "interfaces/_packages_buckets_src_normalize_.file"
      },
      "interfaces/_packages_hub_src_users_._threads_client_.client": {
        "title": "interfaces/_packages_hub_src_users_._threads_client_.client"
      },
      "modules/_packages_buckets_src_buckets_": {
        "title": "modules/_packages_buckets_src_buckets_"
      },
      "modules/_packages_buckets_src_index_": {
        "title": "modules/_packages_buckets_src_index_"
      },
      "modules/_packages_buckets_src_normalize_": {
        "title": "modules/_packages_buckets_src_normalize_"
      },
      "modules/_packages_hub_src_index_": {
        "title": "modules/_packages_hub_src_index_"
      },
      "modules/_packages_hub_src_users_._threads_client_": {
        "title": "modules/_packages_hub_src_users_._threads_client_"
      },
      "modules/_packages_hub_src_users_": {
        "title": "modules/_packages_hub_src_users_"
      },
      "modules/_scripts_tdocp_": {
        "title": "modules/_scripts_tdocp_"
      },
      "README": {
        "title": "README"
      }
    },
    "links": {},
    "categories": {
      "Getting Started": "Getting Started",
      "Buckets": "Buckets",
      "ThreadDB": "ThreadDB",
      "Other Types & Methods": "Other Types & Methods"
    }
  },
  "pages-strings": {
    "Help Translate|recruit community translators for your project": "Help Translate",
    "Edit this Doc|recruitment message asking to edit the doc source": "Edit",
    "Translate this Doc|recruitment message asking to translate the docs": "Translate"
  }
}
